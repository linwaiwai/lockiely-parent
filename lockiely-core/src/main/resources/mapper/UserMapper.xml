<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lockiely.persistence.mapper.UserMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="org.lockiely.persistence.entity.User">
		<id column="id" property="id" />
		<result column="account" property="account" />
		<result column="password" property="password" />
		<result column="salt" property="salt" />
		<result column="user_name" property="userName" />
		<result column="birthday" property="birthday" />
		<result column="sex" property="sex" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="role_id" property="roleId" />
		<result column="dept_id" property="deptId" />
		<result column="status" property="status" />
	</resultMap>

    <sql id="Base_Column_List">
        id, account, user_name, birthday, sex, email,
        phone, role_id,
        dept_id, status
    </sql>

    <sql id="Base_Column_List_With_Pwd">
        id, account, user_name, birthday, sex, email,
        phone, role_id,
        dept_id, status
    </sql>

    <select id="selectUsers" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from user
        where status != 3
        <if test="name != null and name != ''">
            and (phone like CONCAT('%',#{name},'%')
            or account like CONCAT('%',#{name},'%')
            or name like CONCAT('%',#{name},'%'))
        </if>
        <if test="deptid != null and deptid != 0">
            and (deptid = #{deptid} or deptid in ( select id from dept where pids like CONCAT('%[', #{deptid}, ']%') ))
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (createTime between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
    </select>

    <update id="setStatus">
        update user set status = #{status} where id =
        #{userId}
    </update>

    <update id="changePwd">
        update user set password = #{pwd} where id =
        #{userId}
    </update>

    <update id="setRoles">
        update user set role_id = #{roleIds} where id =
        #{userId}
    </update>

    <select id="getByAccount" resultType="user">
        select *
        from user where account = #{account} and status != 3
    </select>

</mapper>
